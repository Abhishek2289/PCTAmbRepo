// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>TestingOR</b><br>
 * Generated     : <b>2015/10/28 12:27:02 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  October 28, 2015
 * @author ap028084
 */
public abstract class TestingORHelper extends RationalTestScript
{
	/**
	 * Add: with default state.
	 *		.text : Add
	 * 		.class : .Pushbutton
	 * 		.name : Add
	 * 		.classIndex : 0
	 */
	protected GuiTestObject addbutton2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("addbutton2"));
	}
	/**
	 * Add: with specific test context and state.
	 *		.text : Add
	 * 		.class : .Pushbutton
	 * 		.name : Add
	 * 		.classIndex : 0
	 */
	protected GuiTestObject addbutton2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("addbutton2"), anchor, flags);
	}
	
	/**
	 * AfxWnd120: with default state.
	 *		.text : null
	 * 		.class : AfxWnd120
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject afxWnd120window() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("afxWnd120window"));
	}
	/**
	 * AfxWnd120: with specific test context and state.
	 *		.text : null
	 * 		.class : AfxWnd120
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject afxWnd120window(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("afxWnd120window"), anchor, flags);
	}
	
	/**
	 * Announcement: with default state.
	 *		.text : Announcement
	 * 		.class : #32770
	 * 		.processName : powerchart.exe
	 * 		.name : Announcement
	 */
	protected TopLevelSubitemTestObject announcementwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("announcementwindow"));
	}
	/**
	 * Announcement: with specific test context and state.
	 *		.text : Announcement
	 * 		.class : #32770
	 * 		.processName : powerchart.exe
	 * 		.name : Announcement
	 */
	protected TopLevelSubitemTestObject announcementwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("announcementwindow"), anchor, flags);
	}
	
	/**
	 * AssignARelationship: with default state.
	 *		.text : Assign a Relationship
	 * 		.class : #32770
	 * 		.processName : powerchart.exe
	 * 		.name : Assign a Relationship
	 */
	protected TopLevelSubitemTestObject assignARelationshipwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("assignARelationshipwindow"));
	}
	/**
	 * AssignARelationship: with specific test context and state.
	 *		.text : Assign a Relationship
	 * 		.class : #32770
	 * 		.processName : powerchart.exe
	 * 		.name : Assign a Relationship
	 */
	protected TopLevelSubitemTestObject assignARelationshipwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("assignARelationshipwindow"), anchor, flags);
	}
	
	/**
	 * AuthorizingSignatureMR029157: with default state.
	 *		.text : Authorizing Signature - MR029157
	 * 		.class : #32770
	 * 		.processName : cernserver.exe
	 * 		.name : Authorizing Signature - MR029157
	 */
	protected TopLevelSubitemTestObject authorizingSignatureMR029157wi() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("authorizingSignatureMR029157wi"));
	}
	/**
	 * AuthorizingSignatureMR029157: with specific test context and state.
	 *		.text : Authorizing Signature - MR029157
	 * 		.class : #32770
	 * 		.processName : cernserver.exe
	 * 		.name : Authorizing Signature - MR029157
	 */
	protected TopLevelSubitemTestObject authorizingSignatureMR029157wi(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("authorizingSignatureMR029157wi"), anchor, flags);
	}
	
	/**
	 * Continuesubmit: with default state.
	 *		.id : inter-continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit"));
	}
	/**
	 * Continuesubmit: with specific test context and state.
	 *		.id : inter-continue
	 * 		.type : submit
	 * 		.value : Continue
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_continuesubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_continuesubmit"), anchor, flags);
	}
	
	/**
	 * Close: with default state.
	 *		.text : Close
	 * 		.class : .Pushbutton
	 * 		.name : Close
	 * 		.classIndex : 0
	 */
	protected GuiTestObject closebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("closebutton"));
	}
	/**
	 * Close: with specific test context and state.
	 *		.text : Close
	 * 		.class : .Pushbutton
	 * 		.name : Close
	 * 		.classIndex : 0
	 */
	protected GuiTestObject closebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("closebutton"), anchor, flags);
	}
	
	/**
	 * Close: with default state.
	 *		.text : Close
	 * 		.class : Button
	 * 		.name : Close
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject closewindow() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("closewindow"));
	}
	/**
	 * Close: with specific test context and state.
	 *		.text : Close
	 * 		.class : Button
	 * 		.name : Close
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject closewindow(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("closewindow"), anchor, flags);
	}
	
	/**
	 * Context: with default state.
	 *		.text : Context
	 * 		.class : .Menupopup
	 * 		.name : Context
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject contextpopupMenu() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("contextpopupMenu"));
	}
	/**
	 * Context: with specific test context and state.
	 *		.text : Context
	 * 		.class : .Menupopup
	 * 		.name : Context
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject contextpopupMenu(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("contextpopupMenu"), anchor, flags);
	}
	
	/**
	 * Done: with default state.
	 *		.text : Done
	 * 		.class : .Pushbutton
	 * 		.name : Done
	 * 		.classIndex : 0
	 */
	protected GuiTestObject donebutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("donebutton"));
	}
	/**
	 * Done: with specific test context and state.
	 *		.text : Done
	 * 		.class : .Pushbutton
	 * 		.name : Done
	 * 		.classIndex : 0
	 */
	protected GuiTestObject donebutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("donebutton"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject edittext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("edittext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject edittext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("edittext"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject edittext2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("edittext2"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject edittext2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("edittext2"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject edittext3() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("edittext3"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject edittext3(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("edittext3"), anchor, flags);
	}
	
	/**
	 * ListBox for Relationship Selection: with default state.
	 *		.class : ListBox
	 * 		.name : Relationships:
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject listBoxForRelationshipSelectio() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("listBoxForRelationshipSelectio"));
	}
	/**
	 * ListBox for Relationship Selection: with specific test context and state.
	 *		.class : ListBox
	 * 		.name : Relationships:
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject listBoxForRelationshipSelectio(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("listBoxForRelationshipSelectio"), anchor, flags);
	}
	
	/**
	 * Medication: with default state.
	 *		.text : Medication
	 * 		.class : .Radiobutton
	 * 		.name : Medication
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject medicationradioButton() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("medicationradioButton"));
	}
	/**
	 * Medication: with specific test context and state.
	 *		.text : Medication
	 * 		.class : .Radiobutton
	 * 		.name : Medication
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject medicationradioButton(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("medicationradioButton"), anchor, flags);
	}
	
	/**
	 * MenuBar: with default state.
	 *		.text : Menu Bar
	 * 		.class : .Menubar
	 * 		.name : Menu Bar
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject menuBarmenuBar() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("menuBarmenuBar"));
	}
	/**
	 * MenuBar: with specific test context and state.
	 *		.text : Menu Bar
	 * 		.class : .Menubar
	 * 		.name : Menu Bar
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject menuBarmenuBar(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("menuBarmenuBar"), anchor, flags);
	}
	
	/**
	 * MillenniumLogon: with default state.
	 *		.text : Millennium Logon
	 * 		.class : #32770
	 * 		.processName : cernserver.exe
	 * 		.name : Millennium Logon
	 */
	protected TopLevelSubitemTestObject millenniumLogonwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("millenniumLogonwindow"));
	}
	/**
	 * MillenniumLogon: with specific test context and state.
	 *		.text : Millennium Logon
	 * 		.class : #32770
	 * 		.processName : cernserver.exe
	 * 		.name : Millennium Logon
	 */
	protected TopLevelSubitemTestObject millenniumLogonwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("millenniumLogonwindow"), anchor, flags);
	}
	
	/**
	 * mr: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject mrtext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mrtext"));
	}
	/**
	 * mr: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject mrtext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mrtext"), anchor, flags);
	}
	
	/**
	 * OKfor Assign Relationship: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject oKforAssignRelationshipbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("oKforAssignRelationshipbutton"));
	}
	/**
	 * OKfor Assign Relationship: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject oKforAssignRelationshipbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("oKforAssignRelationshipbutton"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton2"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton2"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton3() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton3"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton3(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton3"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton4() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton4"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton4(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton4"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton5() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton5"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton5(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton5"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton6() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton6"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton6(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton6"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : Button
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject okwindow() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("okwindow"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : Button
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject okwindow(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("okwindow"), anchor, flags);
	}
	
	/**
	 * PatA1234566OpenedByRaoMohan: with default state.
	 *		.text : Pat, A - 1234566 Opened by Rao, Mohan
	 * 		.class : Afx:6A120000:0
	 * 		.processName : powerchart.exe
	 * 		.name : Pat, A - 1234566 Opened by Rao, Mohan
	 */
	protected TopLevelSubitemTestObject patA1234566OpenedByRaoMohanwin() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("patA1234566OpenedByRaoMohanwin"));
	}
	/**
	 * PatA1234566OpenedByRaoMohan: with specific test context and state.
	 *		.text : Pat, A - 1234566 Opened by Rao, Mohan
	 * 		.class : Afx:6A120000:0
	 * 		.processName : powerchart.exe
	 * 		.name : Pat, A - 1234566 Opened by Rao, Mohan
	 */
	protected TopLevelSubitemTestObject patA1234566OpenedByRaoMohanwin(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("patA1234566OpenedByRaoMohanwin"), anchor, flags);
	}
	
	/**
	 * PatAAddOrder: with default state.
	 *		.text : Pat, A - Add Order
	 * 		.class : #32770
	 * 		.processName : powerchart.exe
	 * 		.name : Pat, A - Add Order
	 */
	protected TopLevelSubitemTestObject patAAddOrderwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("patAAddOrderwindow"));
	}
	/**
	 * PatAAddOrder: with specific test context and state.
	 *		.text : Pat, A - Add Order
	 * 		.class : #32770
	 * 		.processName : powerchart.exe
	 * 		.name : Pat, A - Add Order
	 */
	protected TopLevelSubitemTestObject patAAddOrderwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("patAAddOrderwindow"), anchor, flags);
	}
	
	/**
	 * PatAMRN1234566AddAllergyAdverseEffect: with default state.
	 *		.text : Pat, A (MRN: 1234566) - Add Allergy/Adverse Effect
	 * 		.class : #32770
	 * 		.processName : powerchart.exe
	 * 		.name : Pat, A (MRN: 1234566) - Add Allergy/Adverse Effect
	 */
	protected TopLevelSubitemTestObject patAMRN1234566AddAllergyAdvers() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("patAMRN1234566AddAllergyAdvers"));
	}
	/**
	 * PatAMRN1234566AddAllergyAdverseEffect: with specific test context and state.
	 *		.text : Pat, A (MRN: 1234566) - Add Allergy/Adverse Effect
	 * 		.class : #32770
	 * 		.processName : powerchart.exe
	 * 		.name : Pat, A (MRN: 1234566) - Add Allergy/Adverse Effect
	 */
	protected TopLevelSubitemTestObject patAMRN1234566AddAllergyAdvers(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("patAMRN1234566AddAllergyAdvers"), anchor, flags);
	}
	
	/**
	 * PatientSearchOK button: with default state.
	 *		.text : OK
	 * 		.class : ThunderRT6CommandButton
	 * 		.name : OK
	 * 		.classIndex : 6
	 */
	protected GuiTestObject patientSearchOKButtonwindow() 
	{
		return new GuiTestObject(
                        getMappedTestObject("patientSearchOKButtonwindow"));
	}
	/**
	 * PatientSearchOK button: with specific test context and state.
	 *		.text : OK
	 * 		.class : ThunderRT6CommandButton
	 * 		.name : OK
	 * 		.classIndex : 6
	 */
	protected GuiTestObject patientSearchOKButtonwindow(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("patientSearchOKButtonwindow"), anchor, flags);
	}
	
	/**
	 * Patient Search Text box: with default state.
	 *		.class : .Text
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject patientSearchTextBoxtext() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("patientSearchTextBoxtext"));
	}
	/**
	 * Patient Search Text box: with specific test context and state.
	 *		.class : .Text
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject patientSearchTextBoxtext(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("patientSearchTextBoxtext"), anchor, flags);
	}
	
	/**
	 * PatientSearch: with default state.
	 *		.text : Patient Search
	 * 		.class : ThunderRT6FormDC
	 * 		.processName : powerchart.exe
	 * 		.name : Patient Search
	 */
	protected TopLevelSubitemTestObject patientSearchwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("patientSearchwindow"));
	}
	/**
	 * PatientSearch: with specific test context and state.
	 *		.text : Patient Search
	 * 		.class : ThunderRT6FormDC
	 * 		.processName : powerchart.exe
	 * 		.name : Patient Search
	 */
	protected TopLevelSubitemTestObject patientSearchwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("patientSearchwindow"), anchor, flags);
	}
	
	/**
	 * PowerChartOrganizerForRaoMohan: with default state.
	 *		.text : PowerChart Organizer for Rao, Mohan
	 * 		.class : Afx:64DD0000:0
	 * 		.processName : powerchart.exe
	 * 		.name : PowerChart Organizer for Rao, Mohan
	 */
	protected TopLevelSubitemTestObject powerChartOrganizerForRaoMo() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("powerChartOrganizerForRaoMo"));
	}
	/**
	 * PowerChartOrganizerForRaoMohan: with specific test context and state.
	 *		.text : PowerChart Organizer for Rao, Mohan
	 * 		.class : Afx:64DD0000:0
	 * 		.processName : powerchart.exe
	 * 		.name : PowerChart Organizer for Rao, Mohan
	 */
	protected TopLevelSubitemTestObject powerChartOrganizerForRaoMo(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("powerChartOrganizerForRaoMo"), anchor, flags);
	}
	
	/**
	 * PowerChart: with default state.
	 *		.class : .Graphic
	 * 		.name : PowerChart
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject powerChartwin() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("powerChartwin"));
	}
	/**
	 * PowerChart: with specific test context and state.
	 *		.class : .Graphic
	 * 		.name : PowerChart
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject powerChartwin(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("powerChartwin"), anchor, flags);
	}
	
	/**
	 * Pushbutton: with default state.
	 *		.text : ...
	 * 		.class : .Pushbutton
	 * 		.name : ...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject pushbuttonbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("pushbuttonbutton"));
	}
	/**
	 * Pushbutton: with specific test context and state.
	 *		.text : ...
	 * 		.class : .Pushbutton
	 * 		.name : ...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject pushbuttonbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("pushbuttonbutton"), anchor, flags);
	}
	
	/**
	 * Search: with default state.
	 *		.text : Search
	 * 		.class : .Pushbutton
	 * 		.name : Search
	 * 		.classIndex : 0
	 */
	protected GuiTestObject searchbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("searchbutton"));
	}
	/**
	 * Search: with specific test context and state.
	 *		.text : Search
	 * 		.class : .Pushbutton
	 * 		.name : Search
	 * 		.classIndex : 0
	 */
	protected GuiTestObject searchbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("searchbutton"), anchor, flags);
	}
	
	/**
	 * Select component to Navigate SysListView32: with default state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject selectComponentToNavigateSysLi() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("selectComponentToNavigateSysLi"));
	}
	/**
	 * Select component to Navigate SysListView32: with specific test context and state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject selectComponentToNavigateSysLi(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("selectComponentToNavigateSysLi"), anchor, flags);
	}
	
	/**
	 * SftTreeControl32OCX: with default state.
	 *		.text : null
	 * 		.class : SftTreeControl32OCX
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject sftTreeControl32OCXwindow() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("sftTreeControl32OCXwindow"));
	}
	/**
	 * SftTreeControl32OCX: with specific test context and state.
	 *		.text : null
	 * 		.class : SftTreeControl32OCX
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject sftTreeControl32OCXwindow(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("sftTreeControl32OCXwindow"), anchor, flags);
	}
	
	/**
	 * Sign: with default state.
	 *		.text : Sign
	 * 		.class : .Pushbutton
	 * 		.name : Sign
	 * 		.classIndex : 0
	 */
	protected GuiTestObject signbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("signbutton"));
	}
	/**
	 * Sign: with specific test context and state.
	 *		.text : Sign
	 * 		.class : .Pushbutton
	 * 		.name : Sign
	 * 		.classIndex : 0
	 */
	protected GuiTestObject signbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("signbutton"), anchor, flags);
	}
	
	

	protected TestingORHelper()
	{
		setScriptName("TestingOR");
	}
	
}

